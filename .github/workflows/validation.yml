name: CI Validation

on:
  pull_request:
    branches:
      - "main"

jobs:
  terraform:
    name: Terraform Validation
    runs-on: ubuntu-latest

    steps:

    - name: Checkout 🔔
      uses: actions/checkout@v4

    - name: Setup TFLint 🖌️
      uses: terraform-linters/setup-tflint@v4
      with:
        tflint_version: latest

    - name: Init TFLint 🚦
      run: tflint --init
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Install Terraform ⛰️
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: latest

    - name: Terraform Init 🏃
      id: init
      run: terraform init

    - name: Terraform fmt 📔
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Validate ✅
      id: validate
      run: terraform validate -no-color

    - name: Generate Terraform Docs 📜
      uses: terraform-docs/gh-actions@v1.2.0
      with:
        working-dir: .
        output-file: TERRAFORM.md
        output-method: inject
        git-push: "true"

    - name: Show detailed Terraform format and validate output 📖
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
          #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`
          <details><summary>Validation Output</summary>

          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ github.workspace }}\`, Workflow: \`${{ github.workflow }}\`*`;
